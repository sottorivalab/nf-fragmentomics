// profiles for containers and modes: stub, devel, debug, large, small
// See README for examples.


profiles {

	// stub run with stub annotation files
    stub {
		includeConfig 'stub.config'
		process {
			memory = 4.GB
			cpus = 1
            beforeScript = 'echo $HOSTNAME'
            debug = true
			executor = "local"
        }
	}

	// devel local run with minimal resources
    devel {
        process {
			memory = 4.GB
			cpus = 1
			executor = "local"
		}
    }

	// conda profile
	conda {
		conda.enabled = true
        // use a single env for the whole pipeline
        process.conda = "${baseDir}/environment.yml"
	}

	// docker profile
    docker {
        docker.enabled = true
        // Avoid this error:
        // WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
        // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
        // once this is established and works well, nextflow might implement this behavior as new default.
        docker.runOptions = '-u \$(id -u):\$(id -g)'
    }

	// singularity profile
	singularity {
		singularity.enabled = true
		singularity.envWhitelist = ['SINGULARITY_TMPDIR']
		singularity.runOptions = '-B $SINGULARITY_TMPDIR:/tmp'
        singularity.autoMounts = true
	}

    // HPC run with large input bam files
    large {
        // Enable retries globally for certain exit codes
        process {
            maxErrors     = '-1'
            maxRetries    = 5
            errorStrategy = {task.exitStatus in [104,134,137,139,143,255] ? 'retry' : 'finish' }
       
			withLabel: 'local_executor' {
				executor = "local"
				memory = 8.GB
    			cpus = 1    
			}

			withLabel: 'heavy_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 16
				memory = 512.GB
				time = '12h'
			}

			withLabel: 'normal_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 2
				memory = 12.GB
				time = '3h'
			}

			withLabel: 'light_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 1
				memory = 8.GB
				time = '1h'
			}

			withLabel: 'fast_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 16
				memory = 64.GB
				time = '1h'
			}
		}        
    }

    // HPC run with small input bam files
    small {
        // Enable retries globally for certain exit codes
        process {
            maxErrors     = '-1'
            maxRetries    = 5
            errorStrategy = {task.exitStatus in [104,134,137,139,143,255] ? 'retry' : 'finish' }
       
			withLabel: 'local_executor' {
				executor = "local"
				memory = 8.GB
    			cpus = 1    
			}

			withLabel: 'heavy_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 4
				memory = 24.GB
				time = '4h'
			}

			withLabel: 'normal_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 2
				memory = 16.GB
				time = '2h'
			}

			withLabel: 'light_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 1
				memory = 8.GB
				time = '1h'
			}

			withLabel: 'fast_process' {
				executor = 'slurm'
				queue = 'cpuq'
				cpus = 8
				memory = 8.GB
				time = '60m'
			}
		}
    }
}
