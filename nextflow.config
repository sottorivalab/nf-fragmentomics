/*
 *
 * -------------------------------------------------
 *  nf-fragmentomics Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 *
 */

// Manifest
manifest {
	name = 'nf-fragmentomics'
	description = 'Nextflow pipeline for fragmentomics analysis'
	homePage = 'https://github.com/sottorivalab/nf-fragmentomics'
	mainScript = 'main.nf'
	defaultBranch = 'main'
	version = '0.1.1'
	license = 'MIT'
	nextflowVersion='>=24.9.0'

	contributors = [
		[
			name: 'Davide Rambaldi',
			affiliation: 'Human Technopole',
			email: 'davide.rambaldi@gmail.com',
			github: 'tucano',
			contribution: ['author'], // List of contribution types ('author', 'maintainer' or 'contributor')
			orcid: '0000-0002-1927-3645'
		]
	]						
}

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

includeConfig 'conf/base.config'
includeConfig 'conf/params.config'
includeConfig 'conf/modules.config'

// profiles for containers and modes: stub, devel, debug, large, small
// See README for examples.
profiles {

	// stub run with stub annotation files
	stub {
		includeConfig 'conf/stub.config'
		process {
			resourceLimits = [
				cpus: 1, 
				memory: 4.GB
			]
			beforeScript = 'echo $HOSTNAME'
			debug = true
			executor = "local"
		}
	}

	// devel local run with minimal resources
	devel {
		// enable process selector warnings
		nextflow.enable.configProcessNamesValidation = false

		process {
			resourceLimits = [
				cpus: 1, 
				memory: 8.GB
			]
			executor = "local"
			debug = true
			beforeScript = 'echo $HOSTNAME'			
		}
	}

	test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
	

	// conda profile
	conda {
		conda.enabled = true
		// use a single env for the whole pipeline
		process.conda = "${projectDir}/environment.yml"
	}

	// docker profile
	docker {
		docker.enabled = true
		// Avoid this error:
		// WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
		// Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
		// once this is established and works well, nextflow might implement this behavior as new default.
		docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
		
	}

	// singularity profile
	singularity {
		singularity.enabled = true
		singularity.envWhitelist = ['SINGULARITY_TMPDIR']
		singularity.runOptions = '-B $SINGULARITY_TMPDIR:/tmp'
		singularity.autoMounts = true
	}

	// HPC run with large input bam files
	slurm {
		process {
			executor = 'slurm'
			queue = 'cpuq'	
		}		
	}
}
